name: Packer Push Actions
on:
  push:
    branches:
      - main
jobs:
  test-run-build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6.8'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt --no-cache

      - name: Setup Database
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_TOPIC: ${{ secrets.GCP_TOPIC }}
        run: |
          sudo systemctl start mysql
          sudo -E mysql -u $MYSQL_USER -p"$MYSQL_PASSWORD" -e "CREATE DATABASE $MYSQL_DATABASE;"
          sudo mkdir /var/log/csye6225/
          USER=$(whoami)
          sudo chown -R $USER /var/log/csye6225/
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
              credentials_json: ${{ secrets.PROJECT_CREDENTIALS }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
              project_id: ${{ secrets.PROJECT_ID }}

      - name: Run Test App
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_TOPIC: ${{ secrets.GCP_TOPIC }}
        run: |
          pytest
          
      - name: Build zipfile for transfer
        run: |
              zip -r webapp.zip ./*

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id:   setup
        with:
              version: 1.8.6
              
      - name: Build Custom GCP Image with Packer
        run: |
          packer init .
          packer build -force -var "project_id=${{ secrets.PROJECT_ID }}" ./test.pkr.hcl > packer-build-output.json
          image_id=$(jq -r '.builds[-1].artifact_id' < packer-build-output.json)
          echo "::set-output name=image_id::$image_id"
          echo "IMAGE_ID=${{ steps.packer_build.outputs.image_id }}" >> $GITHUB_ENV
        env:
          GCP_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          GCP_SA_KEY: ${{ secrets.PROJECT_CREDENTIALS }}
      #- name: Create New Instance Template Version
      #  run: |
      #    gcloud compute instance-templates create web-instance-template --machine-type=e2-standard-4 --image-family=debian-9 --image-project=debian-cloud --boot-disk-size=250GB
